#!/bin/bash

function command_exists() {
    command -v $1 &> /dev/null
}

function lowercase() {
    echo $1 | tr '[:upper:]' '[:lower:]'
}

function y_n_dialog() {
    # First parameter should be the default option (y or n)
    if [ "$1" = "y" ]; then
        echo -n "[Y/n] "
    elif [ "$1" = "n" ]; then
        echo -n "[y/N] "
    else
        echo -n "[y/n] "
    fi
    read ANSWER
    ANSWER="$(lowercase $ANSWER)"
    if [ "$ANSWER" = "n" ] || { [ "$ANSWER" = "" ] && [ "$1" = "n" ]; }; then
        # non-zero return value means error, and e. g. command false returns value 1
        return 1
    elif [ "$ANSWER" = "y" ] || { [ "$ANSWER" = "" ] && [ "$1" = "y" ]; }; then
        # zero return value means successful
        return 0
    else
        echo -n "Please answer 'y' or 'n': "
        y_n_dialog $1
    fi
}

function install_packages() {
    if command_exists apt-get; then
        sudo apt-get update
        sudo apt-get -y install $@
    elif command_exists pkg; then
        pkg update
        yes | pkg install $@
    fi
}

function dotfiles() {
    if ! command_exists envsubst; then
        echo "gettext-base must be installed"
        echo -n "Install now? "
        if y_n_dialog y; then
            install_packages gettext-base
        else
            echo "Please install gettext-base manually and try again."
            exit 1
        fi
    fi
    DOTFILES_COMMAND_URL="https://raw.githubusercontent.com/samporapeli/dotfiles/master/.dotfiles-command.txt"
    DOTFILES_COMMAND_PATH="$HOME/.dotfiles-command.txt"
    if test -f "$DOTFILES_COMMAND_PATH"; then
        DOTFILES_COMMAND=$(cat "$DOTFILES_COMMAND_PATH" | envsubst)
    elif command_exists "curl"; then
        DOTFILES_COMMAND=$(curl -s "$DOTFILES_COMMAND_URL" | envsubst)
    elif command_exists "wget"; then
        DOTFILES_COMMAND=$(wget -qO - "$DOTFILES_COMMAND_URL" | envsubst)
    else
        echo "dotfiles-command.txt not available"
        exit 1
    fi
    $DOTFILES_COMMAND $@
}

