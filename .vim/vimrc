" Based on https://missing.csail.mit.edu/2020/editors/ example

" Set leader key
let mapleader = ","

" It's a good idea to set nocompatible:
" https://stackoverflow.com/a/22543937
set nocompatible

" Syntax hilighting
syntax on

" Disable startup message
"set shortmess+=I

" Show line numbers
set number
" Set relative line numbering for easier navigation
set relativenumber

" More intuitive backspace behaviour
set backspace=indent,eol,start

" Unbind some useless/annoying default key bindings.
nmap Q <Nop>

" Mouse support
set mouse+=a

" Search while typing + smart case matching
set incsearch
set ignorecase
set smartcase

" Spaces instead of tabs and other indentation
filetype on
filetype plugin on
filetype indent on
set autoindent
set smartindent
set expandtab
"set smarttab
set shiftround

function SetIndentWidth(...)
  let width = a:0 > 0 ? a:1 : 2
  execute 'set shiftwidth=' . width
  execute 'set softtabstop=' . width
  execute 'set tabstop=' . width
endfunction

function ReTab(tabs, ...)
  let width = a:0 > 0 ? a:1 : &shiftwidth
  call SetIndentWidth(width)
  if a:tabs
    execute 'set noexpandtab'
  else
    execute 'set expandtab'
  end
  %retab!
endfunction

call SetIndentWidth()

" shortcut to indent with tabs/spaces
" Example: convert 2-space indent to tabs (width=3)
" :Tabs 2 (converts spaces to tabs)
" :Tabs 3 (changes width 2->3)
command -nargs=? Tabs execute 'call ReTab(1, <f-args>)'
command -nargs=? Spaces execute 'call ReTab(0, <f-args>)'

" show whitespace
set listchars=tab:→┄,eol:↵,space:·,trail:•
set list

" don't break words
set linebreak

" Show colorcolumn on `textwidth`
set colorcolumn=+0

" Make :W save (I often hit this accidentally as ':' is produced with Shift key)
command W w
command Wq wq
command WQ wq
command Q q

" the delay after pressing esc in insert mode is annoying
set timeoutlen=1000 ttimeoutlen=0

" disable 'Press ENTER or type command to continue' when remote editing
let g:netrw_silent=1

" syntax highlighting in markdown code blocks
let g:markdown_fenced_languages = ['sh', 'bash=sh', 'zsh=sh', 'python', 'html', 'javascript', 'typescript']

map <leader>nh :noh<CR>
map <leader>nl :set list!<CR>

nnoremap <leader>o o<ESC>o
nnoremap <leader>O O<ESC>O
nnoremap <leader>aa ggVG
nnoremap <leader>ca ggVGc
nnoremap <leader>ya msggVG"+yg`s:delmark s<CR>:echo 'Copied buffer content to +'<CR>

map <leader>sp :set spell!<CR>

map <leader>bn :bn<CR>
map <leader>bp :bp<CR>

set backupcopy=yes
